name: Hugo Build CI

on:
  push:
    branches:
    - 'main'
    - 'master'
    - 'staging'
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: nelonoel/branch-name@v1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    - run: echo ${BRANCH_NAME}
    - name: Set ENV vars
      env:
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        BUCKET_NAME_STAGING: ${{ secrets.BUCKET_NAME_STAGING }}
        DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}
        STAGING_DISTRIBUTION_ID: ${{ secrets.STAGING_DISTRIBUTION_ID }}
        MAX_AGE: ${{ secrets.MAX_AGE }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: echo $BUCKET_NAME
    - name: Get HUGO container
      run: docker pull ghcr.io/uvarc/hugo-build:v2
    - name: Run HUGO container
      run: docker run -e BRANCH=$BRANCH_NAME -e TRAVIS_BRANCH=$BRANCH_NAME -e BUCKET_NAME=${{ secrets.BUCKET_NAME }} -e DISTRIBUTION_ID=${{ secrets.DISTRIBUTION_ID }} -e BUCKET_NAME_STAGING=${{ secrets.BUCKET_NAME_STAGING }} -e STAGING_DISTRIBUTION_ID=${{ secrets.STAGING_DISTRIBUTION_ID }} -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e MAX_AGE=${{ secrets.MAX_AGE}} ghcr.io/uvarc/hugo-build:v2 /root/build-site.sh uvarc/rc-website hugo-0.80.0-ext
  #Broken Link Checker using Broken Link Checker Action provided by technote-space
  # -e excludes any vpn links or links that are prone to false negatives
  Broken_Link_Checker:
    name: Broken Link Check
    runs-on: ubuntu-latest
    needs: Build
    continue-on-error: true
    steps:
      - name: Set URL based on branch
        id: set-url
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "URL=https://rc.virginia.edu" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "URL=https://staging.rc.virginia.edu" >> $GITHUB_ENV
          else
            echo "URL=https://staging.rc.virginia.edu" >> $GITHUB_ENV
          fi

      - name: Run Broken Link Checker
        uses: ruzickap/action-my-broken-link-checker@v2
        with:
          url: ${{ env.URL }}
          cmd_params: >
            -e https://ctan.org/
            -e https://ood.hpc.virginia.edu/pun/sys/dashboard
            -e http://www.htslib.org/
            -e rci.hpc
            -e stats.pingdom
            -e fastx.hpc
            -e groups
            -e ansys
            -e innovation.lab
            -e https://openspeedshop.org
            -e https://k8slens.dev/
            -e https://www.abinit.org/ 
            -e https://www.openfoam.com/ 
            -e https://www.nv5geospatialsoftware.com/
            -e tags
            -e https://www.howtogeek.com/107808/how-to-manage-files-from-the-linux-terminal-11-commands-you-need-to-know/
            -e https://uvarc.io/support
            -e http://uvasinklab.org/
            -e http://druzgallab.com
            -e https://www.knime.com/community/image-processing
            -e http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#the-bowtie2-aligner
            -e https://shibidp.its.virginia.edu/idp/profile/SAML2/Redirect/SSO?SAMLRequest=fZJfb4IwFMW%2FCum7FPDvGiFh%2BjATN4mwPexlqeUiTaBlvcVt334ouugefL09%2FZ17TjtHXlcNi1tbqi18toDW%2Ba4rhex0EJLWKKY5SmSK14DMCpbGz2sWuB5rjLZa6Io4MSIYK7VaaIVtDSYFc5ACXrfrkJTWNsgoxX6GrhHuQZq9VJK7kLc0LeVupyuwpYuo6ZEf0GSTZsRZdgtJxY%2FoK1Cnl3njSou3oG5Iu6UKWcGZsoVcGhCWpumGOKtlSD5GecFn4HuziS%2FGkyIYT6e5KDifjXMPHoazTobYwkqh5cqGJPCC0cCbDAIvC3w2HDJv%2Bk6c5Jz9Uapcqv39ona9CNlTliWDPtkbGDyl6gQkmh%2FrZidjc%2FUA97H80jqJLtU0WirBDbjciH%2Fl4F%2FLc3rl1ls37KXDr5aJrqT4ceKq0l8LA9xCSHxCo%2F7K7UeJfgE%3D&RelayState=ss%3Amem%3A0d1eed72c7f039be8380ecc39d14c1ff6326a542b1ea004365f76afbf4e6459b&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256&Signature=a69c65gbD5KGU0E6Xxg%2BWPpromO7qgTYVFUnVgaPuAAgVbGThXlUYUtl6GcF8SR7Nq0ULcneKHMsQwP0muzMg5DP19I30q%2BDbP%2FmTDaXlhhBpz1FLSxskRH7xloqP%2Ffr88K1gwbax2oiKcqB3Lw689j7K3%2BNAHadCbPX1aYPNVitPxnr9jf73ciMOoHOsfjfJxNw%2BoIbtRDmMB1G3DKpv6IlJvSpnWZI27PQsgJTlkoSCBjakATfeuPQk47j9%2F7ZY3JVD8xABRvSOIZ%2FR1XM1pUcSor4lCW9n9QG4psoxRN%2BcNE9shXQ5yG4MHbgtPEFk3TVenqCyeHxNibf1RPqcKCyC9mADnqm4I%2BKv%2B%2F9MpNSPC28smKQhzOFQeNHT6b22tfnwBFULSrCq4yo5iqgPu9zfJHj0w3yoCmHQEG7ml90WrEa%2Fyow2rS5Eusr2llYwN3QfAwavTly%2FkoIN6sWAPssE0Grw89EEobn8SAg1zSgsmIclRGOXNlCaa9EEFdR
            --buffer-size=8192
            --max-connections=10
            --accepted-status-codes=200..300,301,403,999,429
            --skip-tls-verification
            --timeout=60
    
  Slack:
    name: Error Notification
    if: ${{ failure() }}
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: website
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://staging.rc.virginia.edu/images/logos/github-icon-48px.png
        SLACK_TITLE: ERROR - GitHub CI
        SLACK_MESSAGE: 'Build Error :boom:'
        SLACK_USERNAME: ci-bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  Slack2:
    name: Build Notification
    if: ${{ success() }}
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: dev
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://ca.slack-edge.com/T3NTLDW3S-U01TZJS6EJ3-c35d057d96f4-72
        SLACK_TITLE: Build SUCCESS - GitHub CI
        SLACK_MESSAGE: ':ballot_box_with_check: Successful build of the ${{ github.ref }} branch of the RC website.'
        SLACK_USERNAME: Success Bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
